<?xml version="1.0" encoding="iso-8859-1"?>
<programList xmlns="ProgramNameSpace">
 <program public="false" name="controlTasks">
  <paramSection/>
  <localSection>
   <local size="1" type="bool" name="bResult"/>
  </localSection>
  <source>
   <code>begin
  
  //\var bResult 
if (taskStatus(sTaskName[0])==-1)
    taskCreate (sTaskName[0]),50,app:PLC_MainPLC()
  endIf
  // if PLC task is stopped due to an runtime error it should be restarted immediately
  if (taskStatus(sTaskName[0])>1)
    taskKill(sTaskName[0])
    delay(1)
    taskCreate (sTaskName[0]),50,app:PLC_MainPLC()
  endIf
  
  //=========================================================================
  // START PRODUCTION CYCLE
  //=========================================================================
  if SYS:bStartProdCycle and SYS:bRobotHome and (taskStatus(sTaskName[1])==-1 )
    SYS:bStartProdCycle=false
    app:nCaseMP=0
    taskKill(sTaskName[2])
    resetMotion()
    restartMove()
    // reduce monitor speed to data:nSpeedAfterLoad if this is the first start cycle
    if SYS:bFirstRunAfterL
      $setSpeed(min(data:nSpeedAfterLoad,speedScale()))
      SYS:bFirstRunAfterL=false
      //
      //!change 18.05.06, vdg: activate test run after application has been loaded
      if data:setAutoTestRun
        data:setTestRun=true
      endIf
    endIf
    //!change 22.08.06, vdg: reset area test
    call secu:primeAreaTest()
    logMsg("Production started")
    taskCreate (sTaskName[1]),10,app:MP_MainProgram()
    SYS:bTotalHome=false
  endIf
  //!change 12.07.06, vdg: reset automatic timer if robot cycle is not running or 
  // robot power is disabled or working mode is not automatic
  if (taskStatus(sTaskName[1])!=1) or !isPowered() or (workingMode()&lt;3)
    call ui:resetAutoTimer()
  endIf
  //=========================================================================
  // START HOME RETURN CYCLE
  //=========================================================================
  if SYS:bStartHomeCycle and (taskStatus(sTaskName[2])==-1)
    // clear still active status messages
    call ui:clearStatusMsg(false)
    if SYS:bTotalHome
      // reset pallet counters
      call STK:ResetCnt(false)
    endIf
    
    logMsg("Production stopped")
    //!issue 48: home return not possible if main task is being debugged
    // This is a work around for a Val3 bug which makes the 
    // program block in taskKill() when the task is currently being debugged
    //taskKill(sTaskName[1])
    // try to kill the task
    call taskKill(sTaskName[1],bResult)
    
    if !bResult
      // killing the task failed, because it is being debugged?!
      // reset state machine robMotionCtrl
      call ui:popUp("Home return not possible./nPlease kill task MP_MainPrg/nmanually in task manager",0,false)
      SYS:nStateRobot=0
    else
      //!change 08.06.06, vdg: wait until task is killed by system
      wait(taskStatus(sTaskName[1])==-1)
      //!issue 48
      // go to next step in state machine robMotionCtrl
      SYS:nStateRobot=32
      resetMotion()
      restartMove()
      taskCreate (sTaskName[2]),10,app:HR_HomeReturn()
    endIf
      SYS:bStartHomeCycle=false
  endIf
  if rob:bBtStop==true
    taskKill(sTaskName[2])
  endIf
  
end
</code>
  </source>
 </program>
</programList>
