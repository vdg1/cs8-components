<?xml version="1.0" encoding="utf-8" ?>
<programList xmlns="ProgramNameSpace">
 <program public="true" name="errorString">
  <description/>
  <paramSection>
   <param byVal="true" type="num" name="station_"/>
   <param byVal="false" type="string" name="txt_"/>
  </paramSection>
  <localSection>
   <local size="1" type="bool" name="ok"/>
   <local size="1" type="num" name="errCode"/>
  </localSection>
  <source>
   <code>begin
  //\brief
  // Return txt_ which contains the error string of the currently pending error of drive number station_.
  //
  //Return parameter txt_ is empty if no error is pending.
  //\note 
  //Parameter station_ is a zero based index. That means for the first drive station_ is 0, for the second drive station_ is 1, etc.
  //\var ok 
  //\var errCode 
  //\param station_ 
  //\param txt_ 
  //
txt_=""
  call checkStationVal(station_,ok)
  if !ok
    return
  endIf
  //errCode=dioGet(diAlarmCode[8*station_])
  call getAlarmCode(station_,errCode)
  switch true
    case nMode==modDISCRETE and errCode!=0 and diTrouble[station_]==false
      if errCode&lt;size(sErrorMsgDis)
        txt_=sErrorMsgDis[errCode]
      else
        txt_="Unknown error"
      endIf
    break
    case nMode==modSERIAL and errCode!=0
      switch true
        case errCode>size(sErrorMsgSer)
          txt_="Undefined error"
        break
        case errCode&lt;size(sErrorMsgSer)
          txt_=sErrorMsgSer[errCode]
        break
        case sErrorMsgSer[errCode]==""
          txt_="Undefined error"
        break
      endSwitch
    break
    case diTrouble[station_]==false
      txt_="Unknown error"
    break
    default
      txt_="No Error Pending"
      txt_=""
    break
  endSwitch
end

      </code>
  </source>
 </program>
</programList>
